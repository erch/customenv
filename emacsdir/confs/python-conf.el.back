(message "loading python-conf ...")

(unless (locate-library "python-pkg")
  (progn
    (package-install 'python))
)

(require 'python)
(require 'completion-conf)
(require 'highlight-conf)
(require 'yasnippet-conf)
(require 'outline-conf)

(unless (require 'pyvirtualenv nil t)
  (progn
    (package-install 'pyvirtualenv)
    (require 'pyvirtualenv)
    ))

(unless (require 'nose nil t)
  (progn
    (package-install 'nose)
    (require 'nose)
))

;; Browse online documentation ;
; Check https://github.com/tsgates/pylookup
(let ((pylookup-dir (file-name-as-directory (expand-file-name "pylookup-pkg"  ech-site-lisp-dir))))
  (add-to-list 'load-path pylookup-dir)
  (require 'pylookup)
  (setq pylookup-program  (expand-file-name "pylookup.py"  pylookup-dir))
  (setq pylookup-db-file (expand-file-name "pylookup.db" "~/.emacs.d")))

(unless (string= window-system "w32")
  (progn
    (unless (require 'pyde nil t)
      (progn
	(package-install 'pyde)
	(require 'pyde)))
    (pyde-enable)
    (pyde-clean-modeline)
    ;; Flymake support using flake8, including warning faces.
    (if (executable-find "flake8")
	(setq python-check-command "flake8")
      (setq python-check-command "pylint"))
    ;; bug fix
    (defadvice flymake-post-syntax-check (before flymake-force-check-was-interrupted)
      (setq flymake-check-was-interrupted t))
    (ad-activate 'flymake-post-syntax-check)
    ))

;; 
(defun mygetoutline-level()
  "debug function that print the level of outline"
  (interactive)
  (message "%d" (funcall outline-level)))

(defun myheader-search()
  "debug function that searches in a line for the header used by outline"
  (interactive)
  (save-excursion
    (let* ((beg (point-at-bol))
	  (end (point-at-eol))
	  (str (buffer-substring beg end)) ;; same as (current-line-string)
	  (m (string-match-p "^[ \t]*\\(class\\|def\\|if\\|elif\\|else\\|while\\|for\\|try\\|except\\|finally\\|with\\|import\\|from\\)\\( \\|:\\)" str)))
      (message "string : [%s] = %s" str (if m "OK" "NOK")))))

(defun mypy-outline-level ()
  "function used by outline to get the level of a line"
   (save-excursion
     (let* (
 	   (buffer-invisibility-spec)
 	   (first-not-blank-pos (progn (beginning-of-line) (skip-chars-forward " \t"))))
       (+ 1 (/ first-not-blank-pos python-indent-offset)))))

(defun python-mode-setup-hook ()
  "hook to python mode"
  ;; add custom directory of snippets
  (activate-yasnippet-buffer-local-with-dirs (list (expand-file-name "snippets" (file-name-directory ech-emacs-d-dir))))
  (setq-local python-guess-indent nil)

  ;; activation of outline.
  (setq-local python-indent-offset 4)
  (activate-outline-buffer-local "[ \t]*\\(class\\|def\\|if\\|elif\\|else\\|while\\|for\\|try\\|except\\|finally\\|with\\|import\\|from\\)\\( \\|:\\)" "\n" python-indent-offset)
  
  ;; `flymake-no-changes-timeout': The original value of 0.5 is too
  ;; short for Python code, as that will result in the current line to
  ;; be highlighted most of the time, and that's annoying. This value
  ;; might be on the long side, but at least it does not, in general,
  ;; interfere with normal interaction.
  (setq-local flymake-no-changes-timeout 60)

  ;; `flymake-start-syntax-check-on-newline': This should be nil for
  ;; Python, as;; most lines with a colon at the end will mean the next
  ;; line is always highlighted as error, which is not helpful and
  ;; mostly annoying.
  (setq-local flymake-start-syntax-check-on-newline nil)
  
  ;; Set `forward-sexp-function' to nil in python-mode. See
  ;; http://debbugs.gnu.org/db/13/13642.html
  (setq forward-sexp-function nil)
  ;; Enable warning faces for flake8 output.
  (when (string-match "flake8" python-check-command)
    (set (make-local-variable 'flymake-warning-re) "^W[0-9]"))

  ;; browse documentation with w3m
  (setq-local
   browse-url-browser-function 'w3m-browse-url)
  ; change key bindings and menu
  (modify-python-keymap)
  )

(defun modify-python-keymap()
  ;(define-key ropemacs-local-keymap [menu-bar] nil)
  (use-local-map mypython-mode-map))

(setq mypython-mode-map  
      (create-menu-and-key-bindings 
       "Python"
       '(
	 ("Navigation"
	  ["Nav menu" "Navigation menu" imenu  (kbd "C-c C-g n")]
	  ["Goto definition" "Jump to symbol definition" rope-goto-definition (kbd "C-c C-g d")]
	  "--"
	  ["Find Implementation" "Find Implementation" rope-find-implementations (kbd "C-c C-g i")]
	  ["Find file other windows" "Find file Other window" rope-find-file (kbd "C-c C-g 4 f")]
	  ["Find file" "Find file" rope-find-file (kbd "C-c C-g f")]
	  ["Find Occurrences" "Find Occurrences" rope-find-occurrences (kbd "C-c C-g c")]
	  "--"
	  ["Beginning of def" "Move point to the beginning of def or class" python-beginning-of-defun-function]
	  ["End of def" "Move point to end of def or class" python-end-of-defun-function]
	  ["Backwared Statement" "Backwared Statement" pyde-nav-backward-statement  (kbd "M-a")]
	  ["Forward Statement" "Forward Statement" pyde-nav-forward-statement (kbd "M-e")]
	  "--"
	  ["Pop mark" "Pop mark" rope-pop-mark (kbd "C-c C-g m")]
	  ["Jump to global" "Jump to global" rope-jump-to-global (kbd "C-c C-g g")]
	  )
	 ("Project"
	  ["Open project" "Open project" rope-open-project]
	  ["Close project" "Close project" rope-close-project]
	  "--"
	  ["Open project config" "Open project config" rope-project-config]
	  ["Find file" "Find file" rope-find-file]
	  )
	 ("Source"
	  ["Code assist" "Code assist" rope-code-assist]
	  ["Lucky assist" "Lucky assist" rope-lucky-assist]
	  ["Auto Import" "Auto Import" rope-auto-import]
	  "--"
	  ["Analyze module" "Analyze module" rope-analyze-module (kbd "C-c C-s a")]
	  ["Check" "Check" pyde-check (kbd "C-c C-s c")]
	  "--"
	  ["Show Snipets" "shows all possible snippets that can be expanded here" yas-insert-snippet]
	  ["Complete" "Auto complete complete" ac-complete]
	  ("Generate"
	   ["Create File" "File" rope-create-file]
	   ["Create Directory" "Directory" rope-create-directory]
	   ["Create Package" "Package" rope-create-package (kbd "C-c C-s C-c p")]
	   ["Create Module" "Module" rope-create-module (kbd "C-c C-s C-c m")]
	   "--"
	   ["Generate Module" "Module" rope-generate-module]
	   ["Generate Package" "Package" rope-generate-package]
	   ["Generate Function" "Function" rope-generate-function]
	   ["Generate Variable" "Variable" rope-generate-variable]
	   ["Generate Class" "Class" rope-generate-class]
	   )
	  )
	 ("Documentation"
	  ["Show documentation" "Show symbol documentation in other window" pyde-doc-rope (kbd "C-c C-d C-s")]
	  ; ["Search documentation" "Search documentation" pyde-doc-search (kbd "C-c C-d S")]
	  ["Browse documentation" "Browse python documentation" pyde-doc-show (kbd "C-c C-d s")]
	  ["Browse symbol documentation" "Browse documentation for symbol at point" pylookup-lookup (kbd "C-c C-d b")]
	  )
	 ("Test"
	  ["Test one" "Test one" nosetests-one (kbd "C-c C-t o")]
	  ["Test module debug" "Test module debug" nosetests-pdb-one (kbd "C-c C-t C-f")]
	  ["Test all debug" "Test all debug" nosetests-pdb-all (kbd "C-c C-t C-a")]
	  ["Test one debug" "Test one debug" nosetests-pdb-one (kbd "C-c C-t C-o")]
	  ["Test module" "Test module" nosetests-module (kbd "C-c C-t f")]
	  ["Test all" "Test all" nosetests-all (kbd "C-c C-t a")]
	  )
	 ("Refactor"
	  ["Inline" "Inline" rope-inline]
	  ["Extract Variable" "Extract Variable" rope-extract-variable]
	  ["Extract Method" "Extract Method" rope-extract-method]
	  ["Organize Imports" "Organize Imports" rope-organize-imports]
	  ["Rename" "Rename" rope-rename]
	  ["Move" "Move" rope-move]
	  ["Restructure" "Restructure" rope-restructure]
	  ["Use Function" "Use Function" rope-use-function]
	  ["Introduce Factory" "Introduce Factory" rope-introduce-factory]
	  ("Module"
	   ["Module to Package" "Module to Package" rope-module-to-package]
	   ["Rename Module" "Rename Module" rope-rename-current-module]
	   ["Move Module" "Move Module" rope-move-current-module]
	   )
	  "--"
	  ["Redo" "Redo" rope-redo (kbd "S-M-_")]
	  ["Undo" "Undo" rope-undo (kbd "C-M-_")]
	  )
	 ("Process"
	  ["Send defun" "Send defun" python-shell-send-defun (kbd "C-c C-i f")]
	  ["Send region or buffer" "Send region or buffer" pyde-shell-send-region-or-buffer (kbd "C-c C-i s")]
	  ["Switch to shell" "Switch to shell" python-shell-switch-to-shell (kbd "C-c C-i g")]
	  ["Start Python" "Start a Python interpreter" run-python (kbd "C-c C-i r")]
	  )
	 )))

(let ((blocking-map (make-sparse-keymap)))
  (define-key blocking-map [menu-bar] nil)
  (set-keymap-parent blocking-map python-mode-map)
  (set-keymap-parent mypython-mode-map blocking-map))

(add-hook 'python-mode-hook 'python-mode-setup-hook)

(message "python-conf loaded.")
(provide 'python-conf)

;; Rope keymap
;; ================  ============================
;; Key               Command
;; ================  ============================
;; C-x p o           rope-open-project
;; C-x p k           rope-close-project
;; C-x p f           rope-find-file
;; C-x p 4 f         rope-find-file-other-window
;; C-x p u           rope-undo
;; C-x p r           rope-redo
;; C-x p c           rope-project-config
;; C-x p n [mpfd]    rope-create-(module|package|file|directory)
;; \                 rope-write-project
;; \
;; C-c r r           rope-rename
;; C-c r l           rope-extract-variable
;; C-c r m           rope-extract-method
;; C-c r i           rope-inline
;; C-c r v           rope-move
;; C-c r x           rope-restructure
;; C-c r u           rope-use-function
;; C-c r f           rope-introduce-factory
;; C-c r s           rope-change-signature
;; C-c r 1 r         rope-rename-current-module
;; C-c r 1 v         rope-move-current-module
;; C-c r 1 p         rope-module-to-package
;; \
;; C-c r o           rope-organize-imports
;; C-c r n [vfcmp]   rope-generate-(variable|function|class|module|package)
;; \
;; C-c r a /         rope-code-assist
;; C-c r a g         rope-goto-definition
;; C-c r a d         rope-show-doc
;; C-c r a f         rope-find-occurrences
;; C-c r a ?         rope-lucky-assist
;; C-c r a j         rope-jump-to-global
;; C-c r a c         rope-show-calltip
;; \                 rope-analyze-module
;; \
;; \                 rope-auto-import
;; \                 rope-generate-autoimport-cache
;; ================  ============================
;; 
;; 
;; Shortcuts
;; ---------
;; 
;; Some commands are used very frequently; specially the commands in
;; code-assist group.  You can define your own shortcuts like this::
;; 
;;   (define-key ropemacs-local-keymap "\C-cg" 'rope-goto-definition)
;; 
;; Ropemacs itself comes with a few shortcuts:
;; 
;; ================  ============================
;; Key               Command
;; ================  ============================
;; M-/               rope-code-assist
;; M-?               rope-lucky-assist
;; C-c g             rope-goto-definition
;; C-c d             rope-show-doc
;; C-c f             rope-find-occurrences
;; ================  ============================


